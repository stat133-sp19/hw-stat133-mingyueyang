casefold(states,upper=TRUE)
num_chars <- nchar(states)
char_freqs <- as.factor(num_chars)
char_freqs
plot(char_freqs)
firstfive <- head(states,5)
firstfivechar <- nchar(firstfive)
paste0(firstfive, " = ",firstfivechar)
paste(firstfive,collapse = "")
#Find the number of permutations that can be formed by using all the given letters in ALABAMA
factorial(7)/factorial(4)
to_celsius <- function(x = 1) {
(x - 32) * (5/9)
}
to_kelvin <- function(x = 1) {
(x + 459.67) * (5/9)
}
to_reaumur <- function(x = 1) {
(x - 32) * (4/9)
}
to_rankine <- function(x = 1) {
x + 459.67
}
temp_convert <- function(x = 1, to = "celsius") {
switch(tolower(to),
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'celsius')
temp_convert(30, 'celsius')
temp_convert(30, 'Celsius')
temp_convert(30, 'CELSIUS')
one <- c('file1.csv', 'file2.csv', 'file3.csv','file4.csv', 'file5.csv', 'file6.csv','file7.csv', 'file8.csv', 'file9.csv','file10.csv')
two <- paste('file', 1:10, '.csv', sep = "")
three <- paste0('file', 1:10, '.csv')
one
two
three
str_sub(one, 1, 4) <- "dataset"
str_sub(two, 1, 4) <- "dataset"
str_sub(three, 1, 4) <- "dataset"
one
two
three
# name of output file
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("This is the first line", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
is_color <- function(x){
x %in% colors()
}
is_color("yellow")
is_color("blu")
is_color("turkuoise")
colplot <-function(c){
if(is_color(c) == FALSE){
stop(paste("invalid color",c))
}
else if(is_color(c) == TRUE){
set.seed(333)
n <- 100
x <- rnorm(n)
y <- rnorm(n, 1, 2)
plot(x,y,col=c,main = paste("Testing color",c))
}
}
colplot('tomato')
colplot('tomate')
# name of output file
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("---",file = outfile)
cat('title:"Test"',file=outfile)
cat('author:"Mingyue Yang"',file=outfile)
cat('date:"Apr 4 2019"',file=outfile)
cat('output:"html_document"',file=outfile)
cat('---',file=outfile)
cat("This is the first line", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
# name of output file
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("---",file = outfile)
cat('title:"Test"',file=outfile)
cat('author:"Mingyue Yang"',file=outfile)
cat('date:"Apr 4 2019"',file=outfile)
cat('output:"html_document"',file=outfile)
cat('---',file=outfile)
cat("This is the first line", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
# name of output file
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("---",file = outfile)
cat('title:"Test"',file=outfile,append = TRUE)
cat('author:"Mingyue Yang"',file=outfile,append = TRUE)
cat('date:"Apr 4 2019"',file=outfile,append = TRUE)
cat('output:"html_document"',file=outfile,append = TRUE)
cat('---',file=outfile,append = TRUE)
cat("This is the first line", file = outfile,append = TRUE)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
# name of output file
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("---",file = outfile)
cat("\n",'title:"Test"',file=outfile,append = TRUE)
cat("\n",'author:"Mingyue Yang"',file=outfile,append = TRUE)
cat("\n",'date:"Apr 4 2019"',file=outfile,append = TRUE)
cat("\n",'output:"html_document"',file=outfile,append = TRUE)
cat("\n",'---',file=outfile,append = TRUE)
cat("\n\n","This is the first line", file = outfile,append = TRUE)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
# name of output file
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("---",file = outfile)
cat("\n",'title:"Test"',file=outfile,append = TRUE)
cat("\n",'author:"Mingyue Yang"',file=outfile,append = TRUE)
cat("\n",'date:"Apr 4 2019"',file=outfile,append = TRUE)
cat("\n",'output:"html_document"',file=outfile,append = TRUE)
cat("\n",'---',file=outfile,append = TRUE)
cat("\n\n","This is the first line", file = outfile,append = TRUE)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("\n", "A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
is_color <- function(x){
x %in% colors()
}
is_color("yellow")
is_color("blu")
is_color("turkuoise")
expect_equal(stat_range(z), 1L)
#' @title Range
#' @description computes the range of a numeric vector (i.e. max - min)
#' @param x a numeric vector
#' @return the range value (max - min)
stat_range <- function(x) {
max(x) - min(x)
}
x <- c(1, 2, 3, 4, 5)
y <- c(1, 2, 3, 4, NA)
z <- c(TRUE, FALSE, TRUE)
w <- letters[1:5]
# load the source code of the functions to be tested
source("functions.R")
# context with one test that groups expectations
context("Test for range value")
test_that("range works as expected", {
x <- c(1, 2, 3, 4, 5)
expect_equal(stat_range(x), 4)
expect_length(stat_range(x), 1)
expect_type(stat_range(x), 'double')
})
test_that("range works as expected", {
y <- c(1, 2, 3, 4, NA)
expect_length(stat_range(y), 1)
expect_type(stat_range(y), 'NA_real_')
})
test_that("range works as expected", {
z <- c(TRUE, FALSE, TRUE)
expect_equal(stat_range(z), 1L)
expect_length(stat_range(z), 1)
expect_type(stat_range(z), 'integer')
})
test_that("range works as expected", {
w <- letters[1:5]
expect_error(stat_range(w),w)
})
test_file("tests.R")
library(testthat)
test_file("tests.R")
count = c(1000)
count = c(1000)
for(i in 1:1000){
count[i] = length(drawn_balls[i, ][drawn_balls[i, ]=="blue"])
}
bag1 <- c('white', 'white', 'red')
bag2 <- c(rep('white', 3), 'red')
bags <- c('bag1', 'bag2')
repetitions <- 1000
drawn_balls <- character(repetitions)
set.seed(345)
for (i in 1:repetitions) {
# select one bag
chosen_bag <- sample(bags, 1)
# draw a ball from chosen bag
if (chosen_bag == 'bag1') {
drawn_balls[i] <- sample(bag1, 1)
} else {
drawn_balls[i] <- sample(bag2, 1)
}
}
table(drawn_balls) / repetitions
box1 <- c("blue","blue","red")
box2 <- c(rep("blue",2),rep("red",3),"white")
drawn_balls <- matrix(0,nrow = 1000,ncol = 4)
repetitions <- 1000
for(i in 1:repetitions){
if(runif(1) > 0.5){
drawn_balls[i, ] <- sample(box1,size=4,replace = TRUE)
} else {
drawn_balls[i, ] <- sample(box2,size=4,replace=FALSE)
}
}
head(drawn_balls,5)
count = c(1000)
for(i in 1:1000){
count[i] = length(drawn_balls[i, ][drawn_balls[i, ]=="blue"])
}
zero <- c(rep(0,1000))
count = c(rep(0,1000))
for(i in 1:1000){
count[i] <- length(drawn_balls[i, ][drawn_balls[i, ]=="blue"])
}
zero <- c(rep(0,1000))
one <- c(rep(0,1000))
two <- c(rep(0,1000))
three <- c(rep(0,1000))
four <- c(rep(0,1000))
for(i in 1:1000){
zero[i] <- table(count[1:i])[1]/i
one[i] <- table(count[1:i])[2]/i
two[i] <- table(count[1:i])[3]/i
three[i] <- table(count[1:i])[4]/i
four[i] <- table(count[1:i])[5]/i
}
box1 <- c("blue","blue","red")
box2 <- c(rep("blue",2),rep("red",3),"white")
drawn_balls <- matrix(0,nrow = 1000,ncol = 4)
repetitions <- 1000
for(i in 1:repetitions){
if(runif(1) > 0.5){
drawn_balls[i, ] <- sample(box1,size=4,replace = TRUE)
} else {
drawn_balls[i, ] <- sample(box2,size=4,replace=FALSE)
}
}
head(drawn_balls,5)
zero <- c(rep(0,1000))
one <- c(rep(0,1000))
two <- c(rep(0,1000))
three <- c(rep(0,1000))
four <- c(rep(0,1000))
for(i in 1:1000){
zero[i] <- table(count[1:i])[1]/i
one[i] <- table(count[1:i])[2]/i
two[i] <- table(count[1:i])[3]/i
three[i] <- table(count[1:i])[4]/i
four[i] <- table(count[1:i])[5]/i
}
zero <- c(rep(0,1000))
one <- c(rep(0,1000))
two <- c(rep(0,1000))
three <- c(rep(0,1000))
four <- c(rep(0,1000))
for(i in 1:1000){
zero[i] <- table(count[1:i])[1]/i
one[i] <- table(count[1:i])[2]/i
two[i] <- table(count[1:i])[3]/i
three[i] <- table(count[1:i])[4]/i
four[i] <- table(count[1:i])[5]/i
}
head(zero)
head(one)
head(two)
head(three)
head(four)
count = c(rep(0,1000))
for(i in 1:1000){
count[i] <- length(drawn_balls[i, ][drawn_balls[i, ]=="blue"])
}
count
cumsum(count == "0")
zero <- cumsum(count == "0")/1:1000
one <- cumsum(count == "1")/1:1000
two <- cumsum(count == "2")/1:1000
three <- cumsum(count == "3")/1:1000
four <- <- cumsum(count == "4")/1:1000
zero <- cumsum(count == "0")/1:1000
one <- cumsum(count == "1")/1:1000
two <- cumsum(count == "2")/1:1000
three <- cumsum(count == "3")/1:1000
four <- cumsum(count == "4")/1:1000
freq <- data.frame(zero,one,two,three,four)
plot(freq)
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
gglot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="red"))
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="red"))
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="red"))+geom_line(aes(y=one,col="blue"))+geom_line(aes(y=two,col="green"))+geom_line(aes(y=three,col="orange"))+geom_line(aes(y=four,col="yellow"))
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="red"))+geom_line(aes(y=one,col="blue"))+geom_line(aes(y=two,col="green"))+geom_line(aes(y=three,col="orange"))+geom_line(aes(y=four,col="yellow"))+labs(y="relative frequency",x="repetition")
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="red"))+geom_line(aes(y=one,col="blue"))+geom_line(aes(y=two,col="green"))+geom_line(aes(y=three,col="orange"))+geom_line(aes(y=four,col="yellow"))+labs(y="relative frequency",x="repetition",title = "Relative frequencies of number of blue balls")
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="zero"))+geom_line(aes(y=one,col="one"))+geom_line(aes(y=two,col="two"))+geom_line(aes(y=three,col="three"))+geom_line(aes(y=four,col="four"))+labs(y="relative frequency",x="repetition",title = "Relative frequencies of number of blue balls")
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="zero"))+geom_line(aes(y=one,col="one"))
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="zero"))
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="zero"))+geom_line(aes(y=one,col="one"))+geom_line(aes(y=two,col="two"))+geom_line(aes(y=three,col="three"))+geom_line(aes(y=four,col="four"))+labs(y="relative frequency",x="repetition",title = "Relative frequencies of number of blue balls")
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="zero"))+geom_line(aes(y=one,col="one"))+geom_line(aes(y=two,col="two"))+geom_line(aes(y=three,col="three"))+geom_line(aes(y=four,col="four"))+labs(y="relative frequency",x="repetition",title = "Relative frequencies of number of blue balls")+scale_colour_manual("", breaks = c("zero", "one", "two","three","four"),values = c("#7A3225", "#7ADFCC","#2174F0","yellow","orange"))
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="0"))+geom_line(aes(y=one,col="1"))+geom_line(aes(y=two,col="2"))+geom_line(aes(y=three,col="3"))+geom_line(aes(y=four,col="4"))+labs(y="relative frequency",x="repetition",title = "Relative frequencies of number of blue balls")+scale_colour_manual("", breaks = c("0", "1", "2","3","4"),values = c("#7A3225", "#7ADFCC","#2174F0","yellow","orange"))
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="0"))+geom_line(aes(y=one,col="1"))+geom_line(aes(y=two,col="2"))+geom_line(aes(y=three,col="3"))+geom_line(aes(y=four,col="4"))+labs(y="relative frequency",x="repetition",title = "Relative frequencies of number of blue balls")+scale_colour_manual("", breaks = c("0", "1", "2","3","4"),values = c("#7A3225", "#7ADFCC","#2174F0","yellow","orange"))
count = c(rep(0,1000))
for(i in 1:1000){
count[i] <- length(drawn_balls[i, ][drawn_balls[i, ]=="blue"])
}
count
zero <- cumsum(count == "0")/1:1000
one <- cumsum(count == "1")/1:1000
two <- cumsum(count == "2")/1:1000
three <- cumsum(count == "3")/1:1000
four <- cumsum(count == "4")/1:1000
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="0"))+geom_line(aes(y=one,col="1"))+geom_line(aes(y=two,col="2"))+geom_line(aes(y=three,col="3"))+geom_line(aes(y=four,col="4"))+labs(y="relative frequency",x="repetition",title = "Relative frequencies of number of blue balls")+scale_colour_manual("", breaks = c("0", "1", "2","3","4"),values = c("#7A3225", "#7ADFCC","#2174F0","yellow","orange"))
set.seed(345)
box1 <- c("blue","blue","red")
box2 <- c(rep("blue",2),rep("red",3),"white")
drawn_balls <- matrix(0,nrow = 1000,ncol = 4)
repetitions <- 1000
for(i in 1:repetitions){
if(runif(1) > 0.5){
drawn_balls[i, ] <- sample(box1,size=4,replace = TRUE)
} else {
drawn_balls[i, ] <- sample(box2,size=4,replace=FALSE)
}
}
head(drawn_balls,5)
count = c(rep(0,1000))
for(i in 1:1000){
count[i] <- length(drawn_balls[i, ][drawn_balls[i, ]=="blue"])
}
shiny::runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment')
runApp('C:/Users/Riley Yang/Downloads/app1.r')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment')
runApp('C:/Users/Riley Yang/Downloads/app1.r')
runApp('app2')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app3')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app3')
runApp('C:/Users/Riley Yang/Downloads/app1.r')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app3/app3.R')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app2.R')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app3/app3.R')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app1.R')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app2')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app3/app3.R')
bag1 <- c('white', 'white', 'red')
bag2 <- c(rep('white', 3), 'red')
bags <- c('bag1', 'bag2')
repetitions <- 1000
drawn_balls <- character(repetitions)
set.seed(345)
for (i in 1:repetitions) {
# select one bag
chosen_bag <- sample(bags, 1)
# draw a ball from chosen bag
if (chosen_bag == 'bag1') {
drawn_balls[i] <- sample(bag1, 1)
} else {
drawn_balls[i] <- sample(bag2, 1)
}
}
table(drawn_balls) / repetitions
set.seed(123)
box1 <- c("blue","blue","red")
box2 <- c(rep("blue",2),rep("red",3),"white")
drawn_balls <- matrix(0,nrow = 1000,ncol = 4)
repetitions <- 1000
for(i in 1:repetitions){
if(runif(1) > 0.5){
drawn_balls[i, ] <- sample(box1,size=4,replace = TRUE)
} else {
drawn_balls[i, ] <- sample(box2,size=4,replace=FALSE)
}
}
head(drawn_balls,5)
count = c(rep(0,1000))
for(i in 1:1000){
count[i] <- length(drawn_balls[i, ][drawn_balls[i, ]=="blue"])
}
zero <- cumsum(count == "0")/1:1000
one <- cumsum(count == "1")/1:1000
two <- cumsum(count == "2")/1:1000
three <- cumsum(count == "3")/1:1000
four <- cumsum(count == "4")/1:1000
reps <- 1:1000
freq <- data.frame(reps,zero,one,two,three,four)
library(ggplot2)
ggplot(data=freq,aes(x=reps))+geom_line(aes(y=zero,col="0"))+
geom_line(aes(y=one,col="1"))+geom_line(aes(y=two,col="2"))+
geom_line(aes(y=three,col="3"))+geom_line(aes(y=four,col="4"))+
labs(y="relative frequency",x="repetition",title = "Relative frequencies of number of blue balls")+
scale_colour_manual("", breaks = c("0", "1", "2","3","4"),values = c("#7A3225", "#7ADFCC","#2174F0","yellow","orange"))
library(shiny); runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app1.R')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app2/app2.R')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app3/app3.R')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
zero <- cumsum(count == "0")/1:1000
one <- cumsum(count == "1")/1:1000
two <- cumsum(count == "2")/1:1000
three <- cumsum(count == "3")/1:1000
four <- cumsum(count == "4")/1:1000
table(zero,one,two,three,four)
zero <- cumsum(count == "0")/1:1000
one <- cumsum(count == "1")/1:1000
two <- cumsum(count == "2")/1:1000
three <- cumsum(count == "3")/1:1000
four <- cumsum(count == "4")/1:1000
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
freq=="TRUE"
length(count=="zero")
length(count=="0")
length(count=="1")
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/labs/lab10/lab10-drawing-balls-experiment/app4')
shiny::runApp('C:/A-Riley/Berkeley/5 Spring 2019/Stat 133/warmup/workout02/saving-investment-simulation')
shiny::runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
install.packages('rsconnect')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='mingyueyang-cal',
token='68AD39A2C11E2C4AC65AE520583D65DC',
secret='<SECRET>')
rsconnect::setAccountInfo(name='mingyueyang-cal',
token='68AD39A2C11E2C4AC65AE520583D65DC',
secret='<SECRET>')
rsconnect::setAccountInfo(name='mingyueyang-cal',
token='68AD39A2C11E2C4AC65AE520583D65DC',
secret='WL5y73Du23NEdf+Y3P5tasaw2gzYmB+QwIsKiMWt')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
shiny::runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='mingyueyang-cal',
token='68AD39A2C11E2C4AC65AE520583D65DC',
secret='WL5y73Du23NEdf+Y3P5tasaw2gzYmB+QwIsKiMWt')
library(rsconnect)
rsconnect::deployApp()
shiny::runApp()
getwd()
library(rsconnect)
rsconnect::deployApp()
shiny::runApp()
